[{"D:\\workspace-react\\register-system\\client\\src\\index.js":"1","D:\\workspace-react\\register-system\\client\\src\\App.js":"2","D:\\workspace-react\\register-system\\client\\src\\context\\appState.js":"3","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\registerTeacher.js":"4","D:\\workspace-react\\register-system\\client\\src\\components\\students\\registerStudent.js":"5","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin.js":"6","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\teacher.js":"7","D:\\workspace-react\\register-system\\client\\src\\components\\login.js":"8","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin-student.js":"9","D:\\workspace-react\\register-system\\client\\src\\components\\students\\student.js":"10","D:\\workspace-react\\register-system\\client\\src\\context\\appContext.js":"11","D:\\workspace-react\\register-system\\client\\src\\context\\appReducer.js":"12","D:\\workspace-react\\register-system\\client\\src\\context\\initialState.js":"13","D:\\workspace-react\\register-system\\client\\src\\context\\appAction.js":"14","D:\\workspace-react\\register-system\\client\\src\\api\\web-config.js":"15","D:\\workspace-react\\register-system\\client\\src\\components\\headers\\admin-header.js":"16","D:\\workspace-react\\register-system\\client\\src\\components\\headers\\student-header.js":"17","D:\\workspace-react\\register-system\\client\\src\\components\\alerts\\alert-warning.js":"18","D:\\workspace-react\\register-system\\client\\src\\components\\students\\addStudentData.js":"19"},{"size":219,"mtime":1607409887437,"results":"20","hashOfConfig":"21"},{"size":1459,"mtime":1608083877538,"results":"22","hashOfConfig":"21"},{"size":7252,"mtime":1608110538830,"results":"23","hashOfConfig":"21"},{"size":296,"mtime":1607593045603,"results":"24","hashOfConfig":"21"},{"size":12043,"mtime":1608014082191,"results":"25","hashOfConfig":"21"},{"size":6625,"mtime":1607994571712,"results":"26","hashOfConfig":"21"},{"size":10707,"mtime":1607994571714,"results":"27","hashOfConfig":"21"},{"size":9210,"mtime":1608081313491,"results":"28","hashOfConfig":"21"},{"size":5966,"mtime":1608081313490,"results":"29","hashOfConfig":"21"},{"size":11565,"mtime":1608110619382,"results":"30","hashOfConfig":"21"},{"size":107,"mtime":1607496857435,"results":"31","hashOfConfig":"21"},{"size":1450,"mtime":1607760511364,"results":"32","hashOfConfig":"21"},{"size":2041,"mtime":1607752088535,"results":"33","hashOfConfig":"21"},{"size":421,"mtime":1607649783919,"results":"34","hashOfConfig":"21"},{"size":3012,"mtime":1608108376983,"results":"35","hashOfConfig":"21"},{"size":2500,"mtime":1608087553199,"results":"36","hashOfConfig":"21"},{"size":2560,"mtime":1608087559834,"results":"37","hashOfConfig":"21"},{"size":534,"mtime":1608082365676,"results":"38","hashOfConfig":"21"},{"size":12063,"mtime":1608110506677,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"kc86b9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace-react\\register-system\\client\\src\\index.js",[],["85","86"],"D:\\workspace-react\\register-system\\client\\src\\App.js",[],"D:\\workspace-react\\register-system\\client\\src\\context\\appState.js",["87","88","89","90","91","92"],"D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\registerTeacher.js",[],"D:\\workspace-react\\register-system\\client\\src\\components\\students\\registerStudent.js",["93"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\n\r\nconst RegisterStudent = (props) => {\r\n    const { registerStudent, genId, checkDuplicateUsername, checkDuplicateEmail } = useContext(AppContext)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [isError, setIsError] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n\r\n    // const types = [\r\n    //     {id:\"0\", label:\"--Select--\"},\r\n    //     {id:\"1\", label:\"Normal\"},\r\n    //     {id:\"2\", label:\"Special\"}\r\n    // ];\r\n\r\n    // const levels = [\r\n    //     {id:\"0\", label:\"-- Select --\"},\r\n    //     {id:\"1\", label:\"1\"},\r\n    //     {id:\"2\", label:\"2\"},\r\n    //     {id:\"3\", label:\"3\"},\r\n    //     {id:\"4\", label:\"4\"},\r\n    // ];\r\n\r\n    // useEffect(() => {\r\n    //     // console.log(type.type)\r\n    // }, [type])\r\n\r\n    // useEffect(() => {\r\n    //     // console.log(type.type)\r\n    // }, [level])\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault()\r\n        let msg = \"\";\r\n        const dataUsername = {\r\n            \"type\":\"1\",\r\n            \"username\":username,\r\n        };\r\n        const dataEmail = {\r\n            \"type\":\"1\",\r\n            \"email\":email\r\n        };\r\n\r\n        const resCheckUsername = await checkDuplicateUsername(dataUsername)\r\n        // console.log(resCheckUsername)\r\n        const resCheckEmail = await checkDuplicateEmail(dataEmail)\r\n        // console.log(resCheckEmail)\r\n\r\n        let _username = \"\"\r\n        let _email = \"\"\r\n        if(resCheckUsername !== undefined) {\r\n            const { regist_username: username_} = resCheckUsername\r\n            _username = username_\r\n        }\r\n\r\n        if(resCheckEmail !== undefined) {\r\n            const { regist_email: email_} = resCheckEmail\r\n            _email = email_\r\n        }\r\n\r\n        if(password !== confirmPassword) {\r\n            msg = \"Password not match\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(password.length < 6){\r\n            msg = \"Password must more 6 character\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(phone.length !== 10) {\r\n            msg = \"Phone number is 10 digit\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(username === _username) {\r\n            msg = \"This username is duplicate\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(email === _email) {\r\n            msg = \"This email is duplicate\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else {\r\n            // console.log(\"Saved...\")\r\n            const id = genId()\r\n            const data = {\r\n                id,\r\n                username,\r\n                password,\r\n                email,\r\n                phone,\r\n                type:\"1\",\r\n                block: \"0\",\r\n                status: \"0\"\r\n            };\r\n            const res = await fetch(Webconfig.insertStudent(), {\r\n                method: \"POST\",\r\n                headers : {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body : JSON.stringify(data)\r\n            });\r\n            // console.log(res)\r\n            const { status, statusText, ok, url } = res\r\n            if(ok) {\r\n                clearInput()\r\n                const jsonData = await res.json()\r\n                registerStudent(data);\r\n                setMsg(jsonData.message)\r\n                setIsSuccess(true)\r\n                setTimeOutSuccess()\r\n                // props.history.push(\"/\")\r\n\r\n            } else if(!ok) {\r\n                console.error(`${status} ${statusText} this ${url}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setUsername(\"\")\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n        setEmail(\"\")\r\n        setPhone(\"\")\r\n    }\r\n\r\n    const setTimeoutError = () => {\r\n        setIsError(true)\r\n        setTimeout(() => {\r\n            setIsError(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"w-25 mx-auto mt-3\">\r\n                <div className=\"mt-2 text-center\"><h3>Register | Student</h3></div>\r\n                <form className=\"mt-4 mb-5\"  onSubmit={(e) => handleRegister(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Confirm password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Email</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Phone</label>\r\n                        <input \r\n                            type=\"number\" \r\n                            className=\"form-control\"\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {/* <hr /> */}\r\n                    {/* <div className=\"form-group\">\r\n                        <label>Firstname</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Lastname</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Birthday</label>\r\n                        <input \r\n                            type=\"date\" \r\n                            className=\"form-control\"\r\n                            value={birthday}\r\n                            onChange={(e) => setBirthday(e.target.value)} \r\n                            required\r\n                            // value=\"2018-07-22\"\r\n                            // min=\"1850/01/01\" max=\"2999/12/31\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form=group\">\r\n                        <level>Address</level>\r\n                        <textarea type=\"text\"\r\n                            className=\"from-control\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Faculty</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={faculty}\r\n                            onChange={(e) => setFaculty(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Major</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={major}\r\n                            onChange={(e) => setMajor(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Level</label>\r\n                        <select className=\"custom-select\"\r\n                            onChange={(e) => setLevel({ level: e.target.value })}\r\n                        >\r\n                        {\r\n                            levels.map(item => \r\n                                <option key={item.id} value={item.id}>{item.label}</option>\r\n                            )\r\n                        }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Type</label>\r\n                        <select className=\"custom-select\"\r\n                            onChange={(e) => setType({ type: e.target.value })}\r\n                        >\r\n                        {\r\n                            types.map(item => \r\n                                <option key={item.id} value={item.label}>{item.label}</option>\r\n                            )\r\n                        }\r\n                        </select>\r\n                    </div> */}\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-light mr-1\">Register</button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => props.history.push(\"/\")}>Cancel</button>\r\n                    </div>\r\n                    {isError && (\r\n                        <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                    {isSuccess && (\r\n                        <div className=\"alert alert-success mt-4\" role=\"alert\">\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RegisterStudent\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { \r\n    IoBookOutline,\r\n    IoPeopleOutline,\r\n    IoPersonOutline,\r\n    IoMailOutline\r\n} from \"react-icons/io5\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport AdminHeader from \"../headers/admin-header\";\r\n\r\nconst Admin = (props) => {\r\n    const { authenLogin } = useContext(AppContext)\r\n    const [admins, setAdmin] = useState([])\r\n    const [countAm, setCountAm] = useState(0)\r\n    const [students, setStudents] = useState([])\r\n    const [countStd, setCountStd] = useState(0)\r\n    const [teachers, setTeachers] = useState([])\r\n    const [countTch, setCountTch] = useState(0)\r\n    const [subjects, setSubjects] = useState([])\r\n    const [countSj, setCountSj] = useState(0)\r\n    const [messages, setMessages] = useState([])\r\n    const [countMsg, setCountMsg] = useState(0)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(messages)\r\n    // }, [messages])\r\n\r\n    const init = () => {\r\n        // if(authenLogin.length === 0) {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            initAdmin()\r\n            initStudent()\r\n            initTeacher()\r\n            initSubject()\r\n            initMessage()\r\n        }\r\n    };\r\n\r\n\r\n    const initAdmin = async () => {\r\n        const res = await fetch(Webconfig.getAllAdmin(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountAm(count)\r\n                setAdmin(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initStudent = async () => {\r\n        const res = await fetch(Webconfig.getAllStudents(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountStd(count)\r\n                setStudents(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initTeacher = async () => {\r\n        const res = await fetch(Webconfig.getAllTeachers(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountTch(count)\r\n                setTeachers(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initSubject = async () => {\r\n        const res = await fetch(Webconfig.getAllSubjects(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountSj(count)\r\n                setSubjects(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initMessage = async () => {\r\n        const res = await fetch(Webconfig.getAllMessages(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            let count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountMsg(count)\r\n                setMessages(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <AdminHeader props={props} />\r\n            <div className=\"container mt-5\" > {/* style={{ marginTop: \"15%\"}} */}\r\n                <h1 className=\"text-center\">Admin home page</h1>\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoPeopleOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countStd}</div>\r\n                    </div>\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoPersonOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countTch}</div>\r\n                    </div>\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoBookOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countSj}</div>\r\n                    </div>\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoMailOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countMsg}</div>\r\n                    </div>\r\n                </div> */}\r\n                {/* <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Handle</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>@mdo</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Jacob</td>\r\n                        <td>Thornton</td>\r\n                        <td>@fat</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Larry</td>\r\n                        <td>the Bird</td>\r\n                        <td>@twitter</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> */}\r\n            </div>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Admin\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\teacher.js",["110","111"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { IoPerson } from \"react-icons/io5\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\n\r\nfunction Teacher( props ) {\r\n    const { authenLogin, logout } = useContext(AppContext)\r\n    const [data, setData] = useState([])\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [oldPassword, setOldPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [isError, setIsErrro] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [data]);\r\n\r\n    const init = async () => {\r\n        if(authenLogin.length === 0) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            const { id } = authenLogin.userData\r\n            const res = await fetch(Webconfig.getTeacherById(id), {\r\n                method: \"GET\"\r\n            });\r\n            const { status, statusText, ok, url} = res\r\n            if(ok) {\r\n                const jsonData = await res.json()\r\n                if(jsonData.length > 0) {\r\n                setData(jsonData[0])\r\n                }\r\n            } else if(!ok) {\r\n                console.log(`${status} ${statusText} this ${url}`)\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault()\r\n        const { id } = data\r\n        const isValid = checkData()\r\n        if(isValid) {\r\n            try {\r\n                const res = await fetch(Webconfig.updateTeacherById(id), {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\":\"application/json\",\r\n                        // \"Access-Control-Allow-Origin\":\"*\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: newPassword\r\n                    })\r\n                });\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    console.log(jsonData)\r\n                    const { message } = jsonData\r\n                    if(message !== \"\") {\r\n                        setIsSuccess(true)\r\n                        setMessage(message)\r\n                        setTimeOutSuccess()\r\n                    }\r\n                    init()\r\n\r\n                } else if(!ok) {\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                }\r\n                \r\n            } catch (err) {\r\n                // console.log(err.message)\r\n                // setMessage(err.message)\r\n                // setIsErrro(true)\r\n                // setTimeOut()\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkData = () => {\r\n        const { t_password: oldPass } = data\r\n        let res = false\r\n        if(oldPassword !== oldPass) {\r\n            setMessage(\"Old password incorrect!\")\r\n            setIsErrro(true)\r\n            setTimeOut()\r\n        } else if(newPassword !== confirmPassword) {\r\n            setMessage(\"Confirm password not match\")\r\n            setIsErrro(true)\r\n            setTimeOut()\r\n        } else {\r\n            res = true\r\n        }\r\n        return res\r\n    }\r\n\r\n    const setTimeOut = () => {\r\n        setTimeout(() => {\r\n            setIsErrro(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        logout()\r\n        props.history.push(\"/\")\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{ backgroundColor: \"#EAEDED\" }}>\r\n                <div className=\"container d-flex justify-content-between\">\r\n                    <div><h2>Teacher || Register System</h2></div>\r\n                    <div className=\"mt-1\">\r\n                        <button \r\n                            className=\"btn btn-light\" \r\n                            onClick={() => handleLogout()}>Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"mt-3 w-75 mx-auto\">\r\n                    <div className=\"d-flex flex-row-reverse mb-2\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-light\" \r\n                            data-toggle=\"modal\" \r\n                            data-target=\"#exampleModal\">\r\n                            Edit password\r\n                        </button>\r\n\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th width=\"90\">Username</th>\r\n                                <td>\r\n                                    <form>\r\n                                        <input type=\"password\" value={data.t_username} readonly />\r\n                                    </form>\r\n                                </td>\r\n                                <th width=\"90\">Password</th>\r\n                                <td>\r\n                                    <form>\r\n                                        <input type=\"password\" value={data.t_password} readonly />\r\n                                    </form>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <td>{data.t_firstname} {data.t_lastname}</td>\r\n                                <th>Gender</th>\r\n                                <td>{data.t_gender}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Age</th>\r\n                                <td>{data.t_age}</td>\r\n                                <th>Birthday</th>\r\n                                <td>{data.t_birthday}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Phone</th>\r\n                                <td>{data.t_phone}</td>\r\n                                <th>Email</th>\r\n                                <td>{data.t_email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Faculty</th>\r\n                                <td>{data.t_faculty}</td>\r\n                                <th>Department</th>\r\n                                <td>{data.t_department}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Address</th>\r\n                                <td colSpan=\"3\">{data.t_address}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                 <hr />\r\n            </div>\r\n\r\n\r\n            {/* Model */}\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit password</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"form align-middle\" onSubmit={(e) => handleUpdate(e)}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Old password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={oldPassword}\r\n                                        onChange={(e) => setOldPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>New password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={newPassword}\r\n                                        onChange={(e) => setNewPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Confrim password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-light\">Update</button> \r\n                                <button type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </form>\r\n                        {isError && (\r\n                            <div className=\"alert alert-danger mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                        {isSuccess && (\r\n                            <div className=\"alert alert-success mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Teacher\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\login.js",["112","113"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { IoAirplane, IoPersonCircleOutline } from \"react-icons/io5\";\r\nimport AppContext from \"../context/appContext\";\r\nimport Webconfig from '../api/web-config';\r\n\r\n\r\nconst Login = ( props ) => {\r\n    const { login, getUserDataByUsername, genToken } = useContext(AppContext)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [type, setType] = useState({type: \"1\"})\r\n    const [isError, setIsError] = useState(false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const types = [\r\n        {id:\"1\", label:\"Student\"},\r\n        {id:\"2\", label:\"Teacher\"}, \r\n        {id:\"3\", label:\"Admin\"}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [type, isError]);    \r\n\r\n    const handleRegister = () => {\r\n        const id = type.type\r\n        if(id === \"1\") { // 1 is student\r\n            props.history.push(\"/student-register\")\r\n        }\r\n        if(id === \"2\") { // 2 is teacher\r\n            props.history.push(\"/teacher-register\")\r\n        }\r\n    }\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        if(username !== \"\" && password !== \"\") {\r\n            const id = type.type\r\n            if(id === \"1\") { // 1 is student\r\n                const res = await getUserDataByUsername(username)\r\n                // console.log(res)\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    if(jsonData.length > 0) {\r\n                        const {regist_username: user, regist_password: pass, is_block } = jsonData[0]\r\n                        if(username === user && password === pass) {\r\n                            if(is_block === \"1\") {\r\n                                setMessage(\"This user was blocked\")\r\n                                setIsError(true)\r\n                                setTimeOut()\r\n                            } else {\r\n                                let token = genToken()\r\n                                const authLogin = {\r\n                                token: token,\r\n                                isLogin: true,\r\n                                userData: jsonData[0]\r\n                            }\r\n                            login(authLogin)\r\n                            props.history.push(\"/student\")\r\n                            }\r\n                            \r\n                        } else {\r\n                            setMessage(\"Username or password incorrect!\")\r\n                            setIsError(true)\r\n                            setTimeOut()\r\n                        }\r\n\r\n                    } else {\r\n                        // console.log(\"No data...\")\r\n                        setMessage(\"This user not found!\")\r\n                        setIsError(true)\r\n                        setTimeOut()\r\n                    }\r\n\r\n                } else if(!ok) {\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                    setMessage(`${status} ${statusText}`)\r\n                    setIsError(true)\r\n                    setTimeOut()\r\n                }\r\n               \r\n            } else  if(id === \"2\") { // 2 is teacher\r\n                // const res = await fetch(Webconfig.getTeacherByUsername(username), {\r\n                //     method: \"GET\"\r\n                // });\r\n                const res = await getUserDataByUsername(username)\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    if(jsonData.length > 0) {\r\n                        const { regist_username: user, regist_password: pass} = jsonData[0]\r\n                        if(username === user && password === pass) {\r\n                            let token = genToken()\r\n                            const authLogin = {\r\n                                token: token,\r\n                                isLogin: true,\r\n                                userData: jsonData[0]\r\n                            }\r\n                            login(authLogin)\r\n                            // setLocalStorage(authLogin)\r\n                            props.history.push(\"/teacher\")\r\n\r\n                        } else {\r\n                            setMessage(\"Username or password incorrect!\")\r\n                            setIsError(true)\r\n                            setTimeOut()\r\n                        }\r\n                    }\r\n\r\n                } else if(!ok){\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                    setMessage(`${status} ${statusText}`)\r\n                    setIsError(true)\r\n                    setTimeOut()\r\n                }\r\n\r\n            } else if(id === \"3\") { // 3 is admin\r\n                try {\r\n                    const res = await fetch(Webconfig.getAdminByUsername(username), {\r\n                        method: \"GET\"\r\n                    });\r\n                    const { status, statusText, ok, url } = res\r\n                    if(ok) {\r\n                        const jsonData = await res.json()\r\n                        if(jsonData.length > 0) {\r\n                            const { am_username: user, am_password: pass} = jsonData[0]\r\n                            if(username === user && password === pass) {\r\n                                let token = genToken()\r\n                                const authLogin = {\r\n                                    token: token,\r\n                                    isLogin: true,\r\n                                    userData: jsonData[0]\r\n                                }\r\n                                login(authLogin)\r\n                                // setLocalStorage(authLogin)\r\n                                props.history.push(\"/admin\")\r\n\r\n                            } else {\r\n                                setMessage(\"Username or password incorrect!\")\r\n                                setIsError(true)\r\n                                setTimeOut()\r\n                            }\r\n                        }\r\n\r\n                    } else if(!ok){\r\n                        console.log(`${status} ${statusText} this ${url}`)\r\n                        setMessage(`${status} ${statusText}`)\r\n                        setIsError(true)\r\n                        setTimeOut()\r\n                    }\r\n                    \r\n                } catch (err) {\r\n                    // console.log(err.message)\r\n                    // setMessage(`Info : ${err.message}`)\r\n                    // setIsError(true)\r\n                    // setTimeOut()\r\n                }\r\n            }\r\n        \r\n        } else {\r\n            setIsError(true)\r\n            setMessage(\"Please enter username and password before!\")\r\n            setTimeOut()\r\n        }\r\n    }\r\n\r\n    const setTimeOut = () => {\r\n        setTimeout(() => {\r\n            setIsError(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-25 mx-auto mt-5\">\r\n            <div className=\"text-center mb-4\"><h3>Login</h3></div>\r\n            <form className=\"form align-middle\" onSubmit={(e) => handleLogin(e)}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Type</label>\r\n                    <select className=\"custom-select\"\r\n                        onChange={(e) => setType({ type: e.target.value })}\r\n                    >\r\n                    {\r\n                        types.map(item => \r\n                            <option key={item.id} value={item.id}>{item.label}</option>\r\n                        )\r\n                    }\r\n                        {/* <option value={type} selected>Student</option>\r\n                        <option value={type}>Teacher</option> */}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-light mr-1\">Login</button>\r\n                    <button type=\"button\" className=\"btn btn-light\" onClick={() => handleRegister()}>Register</button>\r\n                </div>\r\n                {isError && (\r\n                    <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                )}\r\n               \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin-student.js",["114","115","116","117"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { \r\n    IoPersonAddOutline,\r\n    IoTrashOutline,\r\n    IoPencilOutline,\r\n    IoLockOpenOutline,\r\n    IoLockClosedOutline\r\n} from \"react-icons/io5\";\r\nimport AdminHeader from \"../headers/admin-header\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\n\r\nconst AdminStudent = (props) => {\r\n    const { authenLogin } = useContext(AppContext)\r\n    const [students, setStudents] = useState([])\r\n    const [countStd, setCountStd] = useState(0)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, []);\r\n\r\n    const init = () => {\r\n        // if(authenLogin.length === 0) {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        const { userData } = getStorage\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            initStudent()\r\n        }\r\n    };\r\n\r\n    const initStudent = async () => {\r\n        const res = await fetch(Webconfig.getAllStudents(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountStd(count)\r\n                setStudents(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        console.log(\"handleUpdate...\")\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if (window.confirm(\"Are you sure to delete this student?\")) { \r\n            console.log(\"Delete...\")\r\n        } else {\r\n            console.log(\"Cancel...\")\r\n        }\r\n    }\r\n\r\n    const handleBlock = async (id) => {\r\n        const res = await fetch(Webconfig.blockStudent(id), {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                data: \"1\"\r\n            })\r\n        });\r\n        // console.log(res)\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            console.log(jsonData.message)\r\n            initStudent()\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n\r\n    }\r\n\r\n    const handleUnBlock = async (id) => {\r\n        const res = await fetch(Webconfig.unblockStudent(id), {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                data: \"0\"\r\n            })\r\n        });\r\n        // console.log(res)\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            console.log(jsonData.message)\r\n            initStudent()\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <AdminHeader props={props} />\r\n            <div className=\"container mt-4\">\r\n                <div className=\"d-flex flex-row-reverse\">\r\n                    <button className=\"btn btn-light\">\r\n                        <IoPersonAddOutline className=\"ics-3\" />\r\n                    </button>\r\n                </div>\r\n                <table className=\"table mt-2\">\r\n                    <thead className=\"text-center\">\r\n                        <tr>\r\n                            <th scope=\"col\" width=\"50\">ID</th>\r\n                            <th scope=\"col\">NAME</th>\r\n                            <th scope=\"col\" width=\"20\">AGE</th>\r\n                            <th scope=\"col\" width=\"20\">GENDER</th>\r\n                            <th scope=\"col\" width=\"180\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            students.map(std => (\r\n                                <tr key={std.id}>\r\n                                    <td>{std.std_id}</td>\r\n                                    <td>{std.std_firstname} {std.std_lastname}</td>\r\n                                    <td className=\"text-center\">{std.std_age}</td>\r\n                                    <td className=\"text-center\">{std.std_gender}</td>\r\n                                    <td className=\"text-center\">\r\n                                        <button className=\"btn btn-light mr-1\" onClick={() => handleUpdate()}><IoPencilOutline className=\"ics-3\" /></button>\r\n                                        <button className=\"btn btn-light mr-1\" onClick={() => handleDelete()}><IoTrashOutline className=\"ics-3 text-danger\" /></button>\r\n                                        { \r\n                                            std.is_block  === \"0\" ? (\r\n                                                <button className=\"btn btn-light\" onClick={() => handleBlock(std.id)}>\r\n                                                    <IoLockOpenOutline className=\"ics-3 text-success\" />\r\n                                                </button>\r\n                                            ) : (\r\n                                                <button className=\"btn btn-light\" onClick={() => handleUnBlock(std.id)}>\r\n                                                    <IoLockClosedOutline className=\"ics-3 text-danger\"  />\r\n                                                    </button>\r\n                                            )\r\n                                        }\r\n                                        \r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminStudent\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\students\\student.js",["118","119","120","121","122"],"D:\\workspace-react\\register-system\\client\\src\\context\\appContext.js",[],"D:\\workspace-react\\register-system\\client\\src\\context\\appReducer.js",[],"D:\\workspace-react\\register-system\\client\\src\\context\\initialState.js",["123"],"import React from \"react\";\r\n\r\nconst InitialState = {\r\n    authenLogin:[],\r\n    admins:[\r\n        { \r\n            id:1,\r\n            username:\"admin1\",\r\n            password:\"admin1\",\r\n            firstname:\"admin1\",\r\n            lastname:\"admin1\"\r\n        },\r\n        {\r\n            id:2,\r\n            username:\"admin2\",\r\n            password:\"admin2\",\r\n            firstname:\"admin2\",\r\n            lastname:\"admin2\"\r\n        }\r\n    ],\r\n    register:[\r\n        \r\n    ],\r\n    students:[\r\n        {\r\n            id:\"1\", \r\n            username:\"techin\", \r\n            password:\"999999\", \r\n            firstname:\"techin\", \r\n            lastname:\"nakata\", \r\n            birthday:\"1999-12-05\", \r\n            faculty:\"Science-technology\",\r\n            major:\"Computer-science\",\r\n            level:\"1\",\r\n            type:\"Normal\"\r\n        },\r\n        {\r\n            id:\"2\", \r\n            username:\"john\", \r\n            password:\"999999\", \r\n            firstname:\"John\", \r\n            lastname:\"Doe\", \r\n            birthday:\"1996-11-05\", \r\n            faculty:\"Science-technology\",\r\n            major:\"Computer-science\",\r\n            level:\"2\",\r\n            type:\"Normal\"\r\n        },\r\n        {\r\n            id:\"3\", \r\n            username:\"johny\", \r\n            password:\"999999\", \r\n            firstname:\"Johny\", \r\n            lastname:\"Dape\", \r\n            birthday:\"1991-01-05\", \r\n            faculty:\"Science-technology\",\r\n            major:\"Information technology\",\r\n            level:\"3\",\r\n            type:\"Normal\"\r\n        },\r\n    ],\r\n    teachers:[],\r\n\r\n    // Type for login\r\n    // types:[\r\n    //     {id:\"1\", label:\"Student\"},\r\n    //     {id:\"2\", label:\"Teacher\"}\r\n    //     // {id:\"3\", label:\"Admin\"}\r\n    // ],\r\n    // response:[\r\n    //     {   \r\n    //         id:1,\r\n    //         username:\"test1\",\r\n    //         password:\"1234\"\r\n    //     },\r\n    //     {   \r\n    //         id:2,\r\n    //         username:\"test2\",\r\n    //         password:\"1234\"\r\n    //     }\r\n    // ];\r\n    userData: []\r\n};\r\n\r\nexport default InitialState;","D:\\workspace-react\\register-system\\client\\src\\context\\appAction.js",[],"D:\\workspace-react\\register-system\\client\\src\\api\\web-config.js",["124"],"D:\\workspace-react\\register-system\\client\\src\\components\\headers\\admin-header.js",["125","126"],"D:\\workspace-react\\register-system\\client\\src\\components\\headers\\student-header.js",["127","128","129","130"],"D:\\workspace-react\\register-system\\client\\src\\components\\alerts\\alert-warning.js",[],"D:\\workspace-react\\register-system\\client\\src\\components\\students\\addStudentData.js",["131","132","133","134","135","136","137","138","139","140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":7,"column":5,"nodeType":"148","messageId":"149","endLine":7,"endColumn":16},{"ruleId":"146","severity":1,"message":"150","line":8,"column":5,"nodeType":"148","messageId":"149","endLine":8,"endColumn":16},{"ruleId":"146","severity":1,"message":"151","line":10,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":19},{"ruleId":"146","severity":1,"message":"152","line":11,"column":5,"nodeType":"148","messageId":"149","endLine":11,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":14,"column":5,"nodeType":"148","messageId":"149","endLine":14,"endColumn":19},{"ruleId":"146","severity":1,"message":"154","line":15,"column":5,"nodeType":"148","messageId":"149","endLine":15,"endColumn":19},{"ruleId":"146","severity":1,"message":"155","line":1,"column":37,"nodeType":"148","messageId":"149","endLine":1,"endColumn":46},{"ruleId":"146","severity":1,"message":"156","line":3,"column":5,"nodeType":"148","messageId":"149","endLine":3,"endColumn":18},{"ruleId":"146","severity":1,"message":"157","line":4,"column":5,"nodeType":"148","messageId":"149","endLine":4,"endColumn":20},{"ruleId":"146","severity":1,"message":"158","line":5,"column":5,"nodeType":"148","messageId":"149","endLine":5,"endColumn":20},{"ruleId":"146","severity":1,"message":"159","line":6,"column":5,"nodeType":"148","messageId":"149","endLine":6,"endColumn":18},{"ruleId":"146","severity":1,"message":"160","line":13,"column":13,"nodeType":"148","messageId":"149","endLine":13,"endColumn":24},{"ruleId":"146","severity":1,"message":"161","line":14,"column":12,"nodeType":"148","messageId":"149","endLine":14,"endColumn":18},{"ruleId":"146","severity":1,"message":"162","line":15,"column":12,"nodeType":"148","messageId":"149","endLine":15,"endColumn":19},{"ruleId":"146","severity":1,"message":"163","line":16,"column":12,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"146","severity":1,"message":"164","line":17,"column":12,"nodeType":"148","messageId":"149","endLine":17,"endColumn":20},{"ruleId":"146","severity":1,"message":"165","line":18,"column":12,"nodeType":"148","messageId":"149","endLine":18,"endColumn":20},{"ruleId":"146","severity":1,"message":"166","line":19,"column":12,"nodeType":"148","messageId":"149","endLine":19,"endColumn":20},{"ruleId":"146","severity":1,"message":"167","line":20,"column":12,"nodeType":"148","messageId":"149","endLine":20,"endColumn":20},{"ruleId":"146","severity":1,"message":"168","line":21,"column":12,"nodeType":"148","messageId":"149","endLine":21,"endColumn":19},{"ruleId":"146","severity":1,"message":"169","line":22,"column":12,"nodeType":"148","messageId":"149","endLine":22,"endColumn":20},{"ruleId":"146","severity":1,"message":"170","line":23,"column":12,"nodeType":"148","messageId":"149","endLine":23,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":27,"column":8,"nodeType":"173","endLine":27,"endColumn":10,"suggestions":"174"},{"ruleId":"146","severity":1,"message":"175","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":18,"column":8,"nodeType":"173","endLine":18,"endColumn":10,"suggestions":"176"},{"ruleId":"146","severity":1,"message":"177","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":20},{"ruleId":"146","severity":1,"message":"178","line":2,"column":22,"nodeType":"148","messageId":"149","endLine":2,"endColumn":43},{"ruleId":"146","severity":1,"message":"160","line":14,"column":13,"nodeType":"148","messageId":"149","endLine":14,"endColumn":24},{"ruleId":"146","severity":1,"message":"164","line":16,"column":12,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":20,"column":8,"nodeType":"173","endLine":20,"endColumn":10,"suggestions":"179"},{"ruleId":"146","severity":1,"message":"180","line":25,"column":17,"nodeType":"148","messageId":"149","endLine":25,"endColumn":25},{"ruleId":"146","severity":1,"message":"181","line":5,"column":5,"nodeType":"148","messageId":"149","endLine":5,"endColumn":19},{"ruleId":"146","severity":1,"message":"182","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":28,"column":8,"nodeType":"173","endLine":28,"endColumn":10,"suggestions":"183"},{"ruleId":"146","severity":1,"message":"184","line":36,"column":21,"nodeType":"148","messageId":"149","endLine":36,"endColumn":26},{"ruleId":"146","severity":1,"message":"185","line":36,"column":28,"nodeType":"148","messageId":"149","endLine":36,"endColumn":35},{"ruleId":"146","severity":1,"message":"186","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":90,"column":5,"nodeType":"189","messageId":"190","endLine":90,"endColumn":19},{"ruleId":"146","severity":1,"message":"159","line":13,"column":5,"nodeType":"148","messageId":"149","endLine":13,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":23,"column":8,"nodeType":"173","endLine":23,"endColumn":10,"suggestions":"191"},{"ruleId":"146","severity":1,"message":"156","line":9,"column":5,"nodeType":"148","messageId":"149","endLine":9,"endColumn":18},{"ruleId":"146","severity":1,"message":"157","line":10,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":20},{"ruleId":"146","severity":1,"message":"159","line":13,"column":5,"nodeType":"148","messageId":"149","endLine":13,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":24,"column":8,"nodeType":"173","endLine":24,"endColumn":10,"suggestions":"192"},{"ruleId":"146","severity":1,"message":"193","line":3,"column":5,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"181","line":5,"column":5,"nodeType":"148","messageId":"149","endLine":5,"endColumn":19},{"ruleId":"146","severity":1,"message":"194","line":6,"column":5,"nodeType":"148","messageId":"149","endLine":6,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":35,"column":8,"nodeType":"173","endLine":35,"endColumn":10,"suggestions":"195"},{"ruleId":"146","severity":1,"message":"184","line":43,"column":21,"nodeType":"148","messageId":"149","endLine":43,"endColumn":26},{"ruleId":"146","severity":1,"message":"185","line":43,"column":28,"nodeType":"148","messageId":"149","endLine":43,"endColumn":35},{"ruleId":"146","severity":1,"message":"196","line":73,"column":17,"nodeType":"148","messageId":"149","endLine":73,"endColumn":19},{"ruleId":"146","severity":1,"message":"197","line":87,"column":39,"nodeType":"148","messageId":"149","endLine":87,"endColumn":42},{"ruleId":"146","severity":1,"message":"196","line":104,"column":17,"nodeType":"148","messageId":"149","endLine":104,"endColumn":19},{"ruleId":"146","severity":1,"message":"197","line":112,"column":35,"nodeType":"148","messageId":"149","endLine":112,"endColumn":38},{"ruleId":"146","severity":1,"message":"198","line":131,"column":11,"nodeType":"148","messageId":"149","endLine":131,"endColumn":21},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'ADD_STUDENT' is defined but never used.","Identifier","unusedVar","'ADD_TEACHER' is defined but never used.","'DELETE_STUDENT' is defined but never used.","'DELETE_TEACHER' is defined but never used.","'UPDATE_STUDENT' is defined but never used.","'UPDATE_TEACHER' is defined but never used.","'useEffect' is defined but never used.","'IoBookOutline' is defined but never used.","'IoPeopleOutline' is defined but never used.","'IoPersonOutline' is defined but never used.","'IoMailOutline' is defined but never used.","'authenLogin' is assigned a value but never used.","'admins' is assigned a value but never used.","'countAm' is assigned a value but never used.","'students' is assigned a value but never used.","'countStd' is assigned a value but never used.","'teachers' is assigned a value but never used.","'countTch' is assigned a value but never used.","'subjects' is assigned a value but never used.","'countSj' is assigned a value but never used.","'messages' is assigned a value but never used.","'countMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'IoPerson' is defined but never used.",["202"],"'IoAirplane' is defined but never used.","'IoPersonCircleOutline' is defined but never used.",["203"],"'userData' is assigned a value but never used.","'IoCloseOutline' is defined but never used.","'AlertWarning' is defined but never used.",["204"],"'token' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'React' is defined but never used.","no-dupe-keys","Duplicate key 'getAllSubjects'.","ObjectExpression","unexpected",["205"],["206"],"'IoPencilOutline' is defined but never used.","'IoArrowBackOutline' is defined but never used.",["207"],"'id' is assigned a value but never used.","'msg' is assigned a value but never used.","'setTimeOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"208","fix":"211"},{"desc":"208","fix":"212"},{"desc":"208","fix":"213"},{"desc":"208","fix":"214"},{"desc":"208","fix":"215"},"Update the dependencies array to be: [init]",{"range":"216","text":"217"},{"range":"218","text":"217"},{"range":"219","text":"217"},{"range":"220","text":"217"},{"range":"221","text":"217"},{"range":"222","text":"217"},{"range":"223","text":"217"},[963,965],"[init]",[729,731],[617,619],[1185,1187],[539,541],[556,558],[1525,1527]]