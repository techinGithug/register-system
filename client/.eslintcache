[{"D:\\workspace-react\\register-system\\client\\src\\index.js":"1","D:\\workspace-react\\register-system\\client\\src\\App.js":"2","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin.js":"3","D:\\workspace-react\\register-system\\client\\src\\components\\students\\student.js":"4","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\teacher.js":"5","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\registerTeacher.js":"6","D:\\workspace-react\\register-system\\client\\src\\components\\login.js":"7","D:\\workspace-react\\register-system\\client\\src\\context\\appState.js":"8","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin-student.js":"9","D:\\workspace-react\\register-system\\client\\src\\components\\students\\addStudentData.js":"10","D:\\workspace-react\\register-system\\client\\src\\components\\students\\registerStudent.js":"11","D:\\workspace-react\\register-system\\client\\src\\components\\students\\studentProfile.js":"12","D:\\workspace-react\\register-system\\client\\src\\context\\appContext.js":"13","D:\\workspace-react\\register-system\\client\\src\\context\\appReducer.js":"14","D:\\workspace-react\\register-system\\client\\src\\context\\appAction.js":"15","D:\\workspace-react\\register-system\\client\\src\\context\\initialState.js":"16","D:\\workspace-react\\register-system\\client\\src\\components\\alerts\\alert-warning.js":"17","D:\\workspace-react\\register-system\\client\\src\\components\\headers\\admin-header.js":"18","D:\\workspace-react\\register-system\\client\\src\\api\\web-config.js":"19","D:\\workspace-react\\register-system\\client\\src\\components\\headers\\student-header.js":"20","D:\\workspace-react\\register-system\\client\\src\\components\\headers\\teacher-header.js":"21","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin-subject.js":"22"},{"size":219,"mtime":1607409887437,"results":"23","hashOfConfig":"24"},{"size":1720,"mtime":1608186244683,"results":"25","hashOfConfig":"24"},{"size":6625,"mtime":1607994571712,"results":"26","hashOfConfig":"24"},{"size":11565,"mtime":1608110619382,"results":"27","hashOfConfig":"24"},{"size":9905,"mtime":1608177221164,"results":"28","hashOfConfig":"24"},{"size":7765,"mtime":1608179270936,"results":"29","hashOfConfig":"24"},{"size":9857,"mtime":1608178745828,"results":"30","hashOfConfig":"24"},{"size":8790,"mtime":1608189560373,"results":"31","hashOfConfig":"24"},{"size":6063,"mtime":1608194313447,"results":"32","hashOfConfig":"24"},{"size":12143,"mtime":1608167290438,"results":"33","hashOfConfig":"24"},{"size":8310,"mtime":1608179089340,"results":"34","hashOfConfig":"24"},{"size":4782,"mtime":1608179660401,"results":"35","hashOfConfig":"24"},{"size":107,"mtime":1607496857435,"results":"36","hashOfConfig":"24"},{"size":1450,"mtime":1607760511364,"results":"37","hashOfConfig":"24"},{"size":421,"mtime":1607649783919,"results":"38","hashOfConfig":"24"},{"size":2041,"mtime":1607752088535,"results":"39","hashOfConfig":"24"},{"size":534,"mtime":1608082365676,"results":"40","hashOfConfig":"24"},{"size":2513,"mtime":1608186316596,"results":"41","hashOfConfig":"24"},{"size":3448,"mtime":1608191622142,"results":"42","hashOfConfig":"24"},{"size":2575,"mtime":1608167290437,"results":"43","hashOfConfig":"24"},{"size":2545,"mtime":1608177286347,"results":"44","hashOfConfig":"24"},{"size":10294,"mtime":1608194045489,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"kc86b9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace-react\\register-system\\client\\src\\index.js",[],["102","103"],"D:\\workspace-react\\register-system\\client\\src\\App.js",[],"D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { \r\n    IoBookOutline,\r\n    IoPeopleOutline,\r\n    IoPersonOutline,\r\n    IoMailOutline\r\n} from \"react-icons/io5\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport AdminHeader from \"../headers/admin-header\";\r\n\r\nconst Admin = (props) => {\r\n    const { authenLogin } = useContext(AppContext)\r\n    const [admins, setAdmin] = useState([])\r\n    const [countAm, setCountAm] = useState(0)\r\n    const [students, setStudents] = useState([])\r\n    const [countStd, setCountStd] = useState(0)\r\n    const [teachers, setTeachers] = useState([])\r\n    const [countTch, setCountTch] = useState(0)\r\n    const [subjects, setSubjects] = useState([])\r\n    const [countSj, setCountSj] = useState(0)\r\n    const [messages, setMessages] = useState([])\r\n    const [countMsg, setCountMsg] = useState(0)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(messages)\r\n    // }, [messages])\r\n\r\n    const init = () => {\r\n        // if(authenLogin.length === 0) {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            initAdmin()\r\n            initStudent()\r\n            initTeacher()\r\n            initSubject()\r\n            initMessage()\r\n        }\r\n    };\r\n\r\n\r\n    const initAdmin = async () => {\r\n        const res = await fetch(Webconfig.getAllAdmin(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountAm(count)\r\n                setAdmin(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initStudent = async () => {\r\n        const res = await fetch(Webconfig.getAllStudents(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountStd(count)\r\n                setStudents(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initTeacher = async () => {\r\n        const res = await fetch(Webconfig.getAllTeachers(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountTch(count)\r\n                setTeachers(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initSubject = async () => {\r\n        const res = await fetch(Webconfig.getAllSubjects(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            const count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountSj(count)\r\n                setSubjects(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    const initMessage = async () => {\r\n        const res = await fetch(Webconfig.getAllMessages(), {\r\n            method: \"GET\"\r\n        });\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            let count = jsonData.length\r\n            if(jsonData.length > 0) {\r\n                setCountMsg(count)\r\n                setMessages(jsonData)\r\n            }\r\n        } else if(!ok) {\r\n            console.log(`${status} ${statusText} this ${url}`)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <AdminHeader props={props} />\r\n            <div className=\"container mt-5\" > {/* style={{ marginTop: \"15%\"}} */}\r\n                <h1 className=\"text-center\">Admin home page</h1>\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoPeopleOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countStd}</div>\r\n                    </div>\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoPersonOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countTch}</div>\r\n                    </div>\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoBookOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countSj}</div>\r\n                    </div>\r\n                    <div className=\"col-3 text-center\">\r\n                        <div className=\"\"><IoMailOutline className=\"display-3\" /></div>\r\n                        <div className=\"h1\">{countMsg}</div>\r\n                    </div>\r\n                </div> */}\r\n                {/* <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Handle</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>@mdo</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Jacob</td>\r\n                        <td>Thornton</td>\r\n                        <td>@fat</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Larry</td>\r\n                        <td>the Bird</td>\r\n                        <td>@twitter</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> */}\r\n            </div>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Admin\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\students\\student.js",["120","121","122","123","124"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { \r\n    IoPencilOutline,\r\n    IoSaveOutline,\r\n    IoCloseOutline,\r\n    IoCreateOutline,\r\n    IoArrowBackOutline\r\n } from \"react-icons/io5\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport StudentHeader from \"../headers/student-header\";\r\nimport AlertWarning from \"../../components/alerts/alert-warning\";\r\n\r\nconst Student = (props) => {\r\n    const { login, clearLocalStorage, setLocalStorage, getUserDataByUsername, genToken, checkStudentPersonalData, checkStudentEducationData } = useContext(AppContext)\r\n    const [data, setData] = useState([])\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [oldPassword, setOldPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [isError, setIsErrro] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [addPersonal, setAddPersonal] = useState(false)\r\n    const [addEducation, setAddEducation] = useState(false)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const init = async () => {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        // console.log(getStorage)\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            const { token, isLogin, userData } = getStorage\r\n            const { regist_id: std_id } = userData\r\n            setData(userData)\r\n\r\n            const isHave1 = await checkStudentPersonalData(std_id)\r\n            isHave1 ? (setAddPersonal(true)) : (setAddPersonal(false))\r\n\r\n            const isHave2 = await checkStudentEducationData(std_id)\r\n            isHave2 ? (setAddEducation(true)) : (setAddEducation(false))\r\n        }\r\n    };\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault()\r\n        const { id } = data\r\n        const isValid = checkData()\r\n        if(isValid) {\r\n            try {\r\n                const res = await fetch(Webconfig.updateUsernameAndPasswordById(id), {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\":\"application/json\",\r\n                        // \"Access-Control-Allow-Origin\":\"*\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: newPassword\r\n                    })\r\n                });\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    const { message } = jsonData\r\n                    if(message !== \"\") {\r\n                        setIsSuccess(true)\r\n                        setMessage(message)\r\n                        setTimeOutSuccess()\r\n                    }\r\n                    newLoad()\r\n\r\n                } else if(!ok) {\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                }\r\n                \r\n            } catch (err) {\r\n                // console.log(err.message)\r\n                // setMessage(err.message)\r\n                // setIsErrro(true)\r\n                // setTimeOut()\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const newLoad = async () => {\r\n        clearLocalStorage()\r\n        const res = await getUserDataByUsername(data.regist_username)\r\n        const { status, statusText, ok, url } = res\r\n        if(ok) {\r\n            const jsonData = await res.json()\r\n            if(jsonData.length > 0) {\r\n                let token = genToken()\r\n                const authLogin = {\r\n                    token: token,\r\n                    isLogin: true,\r\n                    userData: jsonData[0]\r\n                }\r\n                login(authLogin)\r\n                await setLocalStorage(authLogin)\r\n                init()\r\n            } else {\r\n                console.error(`${status} ${statusText} this ${url}`)\r\n            }\r\n\r\n        } else {\r\n            console.error(`${status} ${statusText} this ${url}`)\r\n        }\r\n        \r\n    }\r\n\r\n    const checkData = () => {\r\n        const { regist_password: oldPass } = data\r\n        let res = false\r\n        if(oldPassword !== oldPass) {\r\n            setMessage(\"Old password incorrect!\")\r\n            setIsErrro(true)\r\n            setTimeOut()\r\n        } else if(newPassword !== confirmPassword) {\r\n            setMessage(\"Confirm password not match\")\r\n            setIsErrro(true)\r\n            setTimeOut()\r\n        } else {\r\n            res = true\r\n        }\r\n        return res\r\n    }\r\n\r\n    const setTimeOut = () => {\r\n        setTimeout(() => {\r\n            setIsErrro(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             <div>\r\n                <StudentHeader props={props} />\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"mt-3 w-50 mx-auto\">\r\n                    {addPersonal ? (\"\") : (\r\n                        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>Personal data!</strong> You are not add personal data. click <IoCreateOutline className=\"ics-2 ml-2 mb-1\" />\r\n                        {/* <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button> */}\r\n                    </div>\r\n                    )}\r\n                    \r\n                    {addEducation ? (\"\") : (\r\n                        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>Education data!</strong> You are not data education data. click <IoCreateOutline className=\"ics-2 ml-2 mb-1\" />\r\n                        {/* <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button> */}\r\n                    </div>\r\n                    )}\r\n                    <table className=\"table table-bordered\">\r\n                        <tbody>\r\n                            <tr className=\"text-center\">\r\n                                <th>Username</th>\r\n                                <th>Password</th>\r\n                                <th width=\"60\">#</th>\r\n                            </tr>\r\n                            <tr className=\"text-center\">\r\n                                <td>\r\n                                    <form>\r\n                                        <input type=\"text\" className=\"form-control\" value={data.regist_username} readOnly />\r\n                                    </form>\r\n                                </td>\r\n                                <td>\r\n                                    <form>\r\n                                        <input type=\"password\" className=\"form-control\" value={data.regist_password} readOnly />\r\n                                    </form>\r\n                                </td>\r\n                                <td>\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-light\" \r\n                                        data-toggle=\"modal\" \r\n                                        data-target=\"#exampleModal\">\r\n                                        <IoPencilOutline className=\"ics-3\" />\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                 <hr />\r\n            </div>\r\n\r\n\r\n            {/* Model */}\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit password</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"form align-middle\" onSubmit={(e) => handleUpdate(e)}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Old password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={oldPassword}\r\n                                        onChange={(e) => setOldPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>New password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={newPassword}\r\n                                        onChange={(e) => setNewPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Confrim password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-light\"><IoSaveOutline className=\"ics-3\" /></button> \r\n                                <button type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\"><IoArrowBackOutline className=\"ics-3\" /></button>\r\n                            </div>\r\n                        </form>\r\n                        {isError && (\r\n                            <div className=\"alert alert-danger mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                        {isSuccess && (\r\n                            <div className=\"alert alert-success mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Student\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\teacher.js",["125","126","127","128","129"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { \r\n    IoPencilOutline,\r\n    IoSaveOutline,\r\n    IoCloseOutline,\r\n    IoCreateOutline,\r\n    IoArrowBackOutline\r\n } from \"react-icons/io5\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport TeacherHeader from \"../headers/teacher-header\";\r\n\r\nfunction Teacher( props ) {\r\n    const { logout, checkTeacherPersonalData } = useContext(AppContext)\r\n    const [data, setData] = useState([])\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [oldPassword, setOldPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [isError, setIsErrro] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [addPersonal, setAddPersonal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [data]);\r\n\r\n    const init = async () => {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            const { token, isLogin, userData } = getStorage\r\n            const { regist_id: t_id } = userData\r\n            setData(userData)\r\n\r\n            const isHave = await checkTeacherPersonalData(t_id)\r\n            isHave ? (setAddPersonal(true)) : (setAddPersonal(false))\r\n        }\r\n    };\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault()\r\n        const { id } = data\r\n        const isValid = checkData()\r\n        if(isValid) {\r\n            try {\r\n                const res = await fetch(Webconfig.updateUsernameAndPasswordById(id), {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\":\"application/json\",\r\n                        // \"Access-Control-Allow-Origin\":\"*\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: newPassword\r\n                    })\r\n                });\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    console.log(jsonData)\r\n                    const { message } = jsonData\r\n                    if(message !== \"\") {\r\n                        setIsSuccess(true)\r\n                        setMessage(message)\r\n                        setTimeOutSuccess()\r\n                    }\r\n                    init()\r\n\r\n                } else if(!ok) {\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                }\r\n                \r\n            } catch (err) {\r\n                // console.log(err.message)\r\n                // setMessage(err.message)\r\n                // setIsErrro(true)\r\n                // setTimeOut()\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkData = () => {\r\n        const { regist_password: oldPass } = data\r\n        let res = false\r\n        if(oldPassword !== oldPass) {\r\n            setMessage(\"Old password incorrect!\")\r\n            setIsErrro(true)\r\n            setTimeOut()\r\n        } else if(newPassword !== confirmPassword) {\r\n            setMessage(\"Confirm password not match\")\r\n            setIsErrro(true)\r\n            setTimeOut()\r\n        } else {\r\n            res = true\r\n        }\r\n        return res\r\n    }\r\n\r\n    const setTimeOut = () => {\r\n        setTimeout(() => {\r\n            setIsErrro(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        logout()\r\n        props.history.push(\"/\")\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TeacherHeader props={props} />\r\n            <div className=\"container\">\r\n            <div className=\"mt-3 w-50 mx-auto\">\r\n                    {addPersonal ? (\"\") : (\r\n                        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>Personal data!</strong> You are not add personal data. click <IoCreateOutline className=\"ics-2 ml-2 mb-1\" />\r\n                        {/* <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button> */}\r\n                    </div>\r\n                    )}\r\n                    \r\n                    <table className=\"table table-bordered\">\r\n                        <tbody>\r\n                            <tr className=\"text-center\">\r\n                                <th>Username</th>\r\n                                <th>Password</th>\r\n                                <th width=\"60\">#</th>\r\n                            </tr>\r\n                            <tr className=\"text-center\">\r\n                                <td>\r\n                                    <form>\r\n                                        <input type=\"text\" className=\"form-control\" value={data.regist_username} readOnly />\r\n                                    </form>\r\n                                </td>\r\n                                <td>\r\n                                    <form>\r\n                                        <input type=\"password\" className=\"form-control\" value={data.regist_password} readOnly />\r\n                                    </form>\r\n                                </td>\r\n                                <td>\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-light\" \r\n                                        data-toggle=\"modal\" \r\n                                        data-target=\"#exampleModal\">\r\n                                        <IoPencilOutline className=\"ics-3\" />\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                 <hr />\r\n            </div>\r\n\r\n\r\n            {/* Model */}\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit password</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"form align-middle\" onSubmit={(e) => handleUpdate(e)}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Old password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={oldPassword}\r\n                                        onChange={(e) => setOldPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>New password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={newPassword}\r\n                                        onChange={(e) => setNewPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Confrim password</label>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-light\"><IoSaveOutline className=\"ics-3\" /></button> \r\n                                <button type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\"><IoArrowBackOutline className=\"ics-3\" /></button>\r\n                            </div>\r\n                        </form>\r\n                        {isError && (\r\n                            <div className=\"alert alert-danger mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                        {isSuccess && (\r\n                            <div className=\"alert alert-success mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Teacher\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\teachers\\registerTeacher.js",["130","131","132"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport { \r\n    IoSaveOutline,\r\n    IoCreateOutline,\r\n    IoArrowBackOutline\r\n } from \"react-icons/io5\";\r\n\r\nfunction RegisterTeacher(props) {\r\n    const { registerStudent, genId, checkDuplicateUsername, checkDuplicateEmail } = useContext(AppContext)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [isError, setIsError] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault()\r\n        let msg = \"\";\r\n        const dataUsername = {\r\n            \"type\":\"2\",\r\n            \"username\":username,\r\n        };\r\n        const dataEmail = {\r\n            \"type\":\"2\",\r\n            \"email\":email\r\n        };\r\n\r\n        const resCheckUsername = await checkDuplicateUsername(dataUsername)\r\n        // console.log(resCheckUsername)\r\n        const resCheckEmail = await checkDuplicateEmail(dataEmail)\r\n        // console.log(resCheckEmail)\r\n\r\n        let _username = \"\"\r\n        let _email = \"\"\r\n        if(resCheckUsername !== undefined) {\r\n            const { regist_username: username_} = resCheckUsername\r\n            _username = username_\r\n        }\r\n\r\n        if(resCheckEmail !== undefined) {\r\n            const { regist_email: email_} = resCheckEmail\r\n            _email = email_\r\n        }\r\n\r\n        if(password !== confirmPassword) {\r\n            msg = \"Password not match\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(password.length < 6){\r\n            msg = \"Password must more 6 character\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(phone.length !== 10) {\r\n            msg = \"Phone number is 10 digit\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(username === _username) {\r\n            msg = \"This username is duplicate\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(email === _email) {\r\n            msg = \"This email is duplicate\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else {\r\n            console.log(\"Saved...\")\r\n            const id = genId()\r\n            const data = {\r\n                id,\r\n                username,\r\n                password,\r\n                email,\r\n                phone,\r\n                type:\"2\",\r\n                block: \"0\",\r\n                status: \"0\"\r\n            };\r\n            const res = await fetch(Webconfig.registerUser(), {\r\n                method: \"POST\",\r\n                headers : {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body : JSON.stringify(data)\r\n            });\r\n            // console.log(res)\r\n            const { status, statusText, ok, url } = res\r\n            if(ok) {\r\n                // clearInput()\r\n                const jsonData = await res.json()\r\n                registerStudent(data);\r\n                setMsg(jsonData.message)\r\n                setIsSuccess(true)\r\n                setTimeOutSuccess()\r\n                props.history.push(\"/\")\r\n\r\n            } else if(!ok) {\r\n                console.error(`${status} ${statusText} this ${url}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setUsername(\"\")\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n        setEmail(\"\")\r\n        setPhone(\"\")\r\n    }\r\n\r\n    const setTimeoutError = () => {\r\n        setIsError(true)\r\n        setTimeout(() => {\r\n            setIsError(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"w-25 mx-auto mt-3\">\r\n                <div className=\"mt-2 text-center\"><h3>Register | Teachers</h3></div>\r\n                <form className=\"mt-4 mb-5\"  onSubmit={(e) => handleRegister(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Confirm password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Email</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Phone</label>\r\n                        <input \r\n                            type=\"number\" \r\n                            className=\"form-control\"\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-light mr-1\"><IoSaveOutline className=\"ics-3\" /></button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => props.history.push(\"/\")}><IoArrowBackOutline className=\"ics-3\" /></button>\r\n                    </div>\r\n                    {isError && (\r\n                        <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                    {isSuccess && (\r\n                        <div className=\"alert alert-success mt-4\" role=\"alert\">\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RegisterTeacher\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\login.js",["133","134"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { IoAirplane, IoPersonCircleOutline } from \"react-icons/io5\";\r\nimport AppContext from \"../context/appContext\";\r\nimport Webconfig from '../api/web-config';\r\n\r\nimport { \r\n    IoCreateOutline,\r\n    IoLogInOutline\r\n } from \"react-icons/io5\";\r\n\r\n\r\nconst Login = ( props ) => {\r\n    const { login, getUserDataByUsername, genToken } = useContext(AppContext)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [type, setType] = useState({type: \"1\"})\r\n    const [isError, setIsError] = useState(false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const types = [\r\n        {id:\"1\", label:\"Student\"},\r\n        {id:\"2\", label:\"Teacher\"}, \r\n        {id:\"3\", label:\"Admin\"}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [type, isError]);    \r\n\r\n    const handleRegister = () => {\r\n        const id = type.type\r\n        if(id === \"1\") { // 1 is student\r\n            props.history.push(\"/student-register\")\r\n        }\r\n        if(id === \"2\") { // 2 is teacher\r\n            props.history.push(\"/register-teacher\")\r\n        }\r\n    }\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        if(username !== \"\" && password !== \"\") {\r\n            const id = type.type\r\n            if(id === \"1\") { // 1 is student\r\n                const res = await getUserDataByUsername(username)\r\n                // console.log(res)\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    if(jsonData.length > 0) {\r\n                        const {regist_username: user, regist_password: pass, regist_type: type, is_block } = jsonData[0]\r\n                        if(username === user && password === pass && id === type) {\r\n                            if(is_block === \"1\") {\r\n                                setMessage(\"This user was blocked\")\r\n                                setIsError(true)\r\n                                setTimeOut()\r\n                            } else {\r\n                                let token = genToken()\r\n                                const authLogin = {\r\n                                token: token,\r\n                                isLogin: true,\r\n                                userData: jsonData[0]\r\n                            }\r\n                            login(authLogin)\r\n                            props.history.push(\"/student\")\r\n                            }\r\n                            \r\n                        } else {\r\n                            setMessage(\"Username or password incorrect!\")\r\n                            setIsError(true)\r\n                            setTimeOut()\r\n                        }\r\n\r\n                    } else {\r\n                        // console.log(\"No data...\")\r\n                        setMessage(\"This user not found. please register!\")\r\n                        setIsError(true)\r\n                        setTimeOut()\r\n                    }\r\n\r\n                } else if(!ok) {\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                    setMessage(`${status} ${statusText}`)\r\n                    setIsError(true)\r\n                    setTimeOut()\r\n                }\r\n               \r\n            } else  if(id === \"2\") { // 2 is teacher\r\n                // const res = await fetch(Webconfig.getTeacherByUsername(username), {\r\n                //     method: \"GET\"\r\n                // });\r\n                const res = await getUserDataByUsername(username)\r\n                const { status, statusText, ok, url } = res\r\n                if(ok) {\r\n                    const jsonData = await res.json()\r\n                    if(jsonData.length > 0) {\r\n                        const { regist_username: user, regist_password: pass, regist_type: type} = jsonData[0]\r\n                        if(username === user && password === pass && id === type) {\r\n                            let token = genToken()\r\n                            const authLogin = {\r\n                                token: token,\r\n                                isLogin: true,\r\n                                userData: jsonData[0]\r\n                            }\r\n                            login(authLogin)\r\n                            // setLocalStorage(authLogin)\r\n                            props.history.push(\"/teacher\")\r\n\r\n                        } else {\r\n                            setMessage(\"Username or password incorrect!\")\r\n                            setIsError(true)\r\n                            setTimeOut()\r\n                        }\r\n                    } else {\r\n                        setMessage(\"This user not found. please register!\")\r\n                        setIsError(true)\r\n                        setTimeOut()\r\n                    }\r\n\r\n                } else if(!ok){\r\n                    console.log(`${status} ${statusText} this ${url}`)\r\n                    setMessage(`${status} ${statusText}`)\r\n                    setIsError(true)\r\n                    setTimeOut()\r\n                }\r\n\r\n            } else if(id === \"3\") { // 3 is admin\r\n                try {\r\n                    const res = await fetch(Webconfig.getAdminByUsername(username), {\r\n                        method: \"GET\"\r\n                    });\r\n                    const { status, statusText, ok, url } = res\r\n                    if(ok) {\r\n                        const jsonData = await res.json()\r\n                        console.log(jsonData)\r\n                        if(jsonData.length > 0) {\r\n                            const { am_username: user, am_password: pass} = jsonData[0]\r\n                            if(username === user && password === pass) {\r\n                                let token = genToken()\r\n                                const authLogin = {\r\n                                    token: token,\r\n                                    isLogin: true,\r\n                                    userData: jsonData[0]\r\n                                }\r\n                                login(authLogin)\r\n                                // setLocalStorage(authLogin)\r\n                                props.history.push(\"/admin\")\r\n\r\n                            } else {\r\n                                setMessage(\"Username or password incorrect!\")\r\n                                setIsError(true)\r\n                                setTimeOut()\r\n                            }\r\n\r\n                        } else {\r\n                            setMessage(\"This user not found!\")\r\n                            setIsError(true)\r\n                            setTimeOut()\r\n                        }\r\n\r\n                    } else if(!ok){\r\n                        console.log(`${status} ${statusText} this ${url}`)\r\n                        setMessage(`${status} ${statusText}`)\r\n                        setIsError(true)\r\n                        setTimeOut()\r\n                    }\r\n                    \r\n                } catch (err) {\r\n                    console.log(err.message)\r\n                    // setMessage(`Info : ${err.message}`)\r\n                    // setIsError(true)\r\n                    // setTimeOut()\r\n                }\r\n            }\r\n        \r\n        } else {\r\n            setIsError(true)\r\n            setMessage(\"Please enter username and password before!\")\r\n            setTimeOut()\r\n        }\r\n    }\r\n\r\n    const setTimeOut = () => {\r\n        setTimeout(() => {\r\n            setIsError(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-25 mx-auto mt-5\">\r\n            <div className=\"text-center mb-4\"><h3>Login</h3></div>\r\n            <form className=\"form align-middle\" onSubmit={(e) => handleLogin(e)}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Type</label>\r\n                    <select className=\"custom-select\"\r\n                        onChange={(e) => setType({ type: e.target.value })}\r\n                    >\r\n                    {\r\n                        types.map(item => \r\n                            <option key={item.id} value={item.id}>{item.label}</option>\r\n                        )\r\n                    }\r\n                        {/* <option value={type} selected>Student</option>\r\n                        <option value={type}>Teacher</option> */}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-light mr-1\"><IoLogInOutline className=\"ics-3\" /></button>\r\n                    <button type=\"button\" className=\"btn btn-light\" onClick={() => handleRegister()}><IoCreateOutline className=\"ics-3\" /></button>\r\n                </div>\r\n                {isError && (\r\n                    <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                )}\r\n               \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\workspace-react\\register-system\\client\\src\\context\\appState.js",["135","136","137","138","139","140","141"],"D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin-student.js",["142","143","144","145"],"D:\\workspace-react\\register-system\\client\\src\\components\\students\\addStudentData.js",["146","147","148","149","150","151","152","153","154"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport { \r\n    IoPencilOutline,\r\n    IoSaveOutline,\r\n    IoCloseOutline,\r\n    IoArrowBackOutline,\r\n    IoCheckmarkOutline\r\n } from \"react-icons/io5\";\r\nimport AppContext from \"../../context/appContext\";\r\nimport StudentHeader from \"../headers/student-header\";\r\n\r\nconst AddStudentData = (props) => {\r\n    const { getUser, addStudentPersonalData, addStudentEducationData, checkStudentPersonalData, checkStudentEducationData } = useContext(AppContext)\r\n    // const [id, setId] = useState(\"\")\r\n    // const [stdId, setStdId] = useState(\"\")\r\n    const [stdFirstname, setStdFirstname] = useState(\"\")\r\n    const [stdLastname, setStdLastname] = useState(\"\")\r\n    const [stdAge, setStdAge] = useState(\"\")\r\n    const [stdGender, setStdGender] = useState(\"Male\")\r\n    const [stdBirthday, setStdBirthdary] = useState(\"\")\r\n    const [stdAddress, setStdAddress] = useState(\"\")\r\n    const [stdZipcode, setStdZipcode] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [addPersonal, setAddPersonal] = useState(false)\r\n    const [stdFaculty, setStdFaculty] = useState(\"\")\r\n    const [stdMajor, setStdMajor] = useState(\"\")\r\n    const [stdLevel, setStdLevel] = useState(\"One\")\r\n    const [stdType, setStdType] = useState(\"Normal\")\r\n    const [addEducation, setAddEducation] = useState(false)\r\n    const [isError, setIsErrro] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const init = async () => {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        // console.log(getStorage)\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            const { token, isLogin, userData } = getStorage\r\n            const { regist_id: std_id } = userData\r\n\r\n            const isHave1 = await checkStudentPersonalData(std_id)\r\n            isHave1 ? (setAddPersonal(true)) : (setAddPersonal(false))\r\n\r\n            const isHave2 = await checkStudentEducationData(std_id)\r\n            isHave2 ? (setAddEducation(true)) : (setAddEducation(false))\r\n        }\r\n    };\r\n\r\n    const genders = [\r\n        {id:\"1\", label:\"Male\"},\r\n        {id:\"2\", label:\"Female\"}\r\n    ];\r\n\r\n    const types = [\r\n        {id:\"1\", label:\"Normal\"},\r\n        {id:\"2\", label:\"Special\"}\r\n    ];\r\n\r\n    const levels = [\r\n        {id:\"1\", label:\"One\"},\r\n        {id:\"2\", label:\"Two\"},\r\n        {id:\"3\", label:\"Three\"},\r\n        {id:\"4\", label:\"Four\"}\r\n    ]\r\n    \r\n    const handleAddPersonalData = e => {\r\n        e.preventDefault()\r\n        const { id, regist_id: std_id } = getUser().userData\r\n        const isValid = checkData()\r\n        if(isValid) {\r\n            const data = {\r\n                std_id,\r\n                firstname: stdFirstname,\r\n                lastname: stdLastname,\r\n                age: stdAge,\r\n                gender: stdGender,\r\n                birthday: stdBirthday,\r\n                address: stdAddress,\r\n                zipcode: stdZipcode\r\n            };\r\n\r\n            const { isError, message: msg} = addStudentPersonalData(data)\r\n            console.log(isError+\" \"+msg)\r\n            if(isError) {\r\n                setMessage(\"Add student personal data uncomplete!\")\r\n                setIsSuccess(true)\r\n                setTimeOutSuccess()\r\n            } else if(!isError){\r\n                // setMessage(msg)\r\n                // setIsSuccess(true)\r\n                // setTimeOutSuccess()\r\n                setAddPersonal(true)\r\n                init()\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAddEducationData = async (e) => {\r\n        e.preventDefault()\r\n        const { id, regist_id: std_id } = getUser().userData\r\n        const data ={\r\n            std_id,\r\n            faculty: stdFaculty,\r\n            major: stdMajor,\r\n            level: stdLevel,\r\n            type: stdType\r\n        };\r\n        const { isError, message: msg } = addStudentEducationData(data)\r\n        console.log(isError+\" \"+msg)\r\n        if(isError) {\r\n            setMessage(\"Add student education uncomplete!\")\r\n            setIsSuccess(true)\r\n            setTimeOutSuccess()\r\n        } else if(!isError){\r\n            // setMessage(msg)\r\n            // setIsSuccess(true)\r\n            // setTimeOutSuccess()\r\n            setAddEducation(true)\r\n            init()\r\n        }\r\n        \r\n    };\r\n\r\n    const checkData = () => {\r\n        return true\r\n    };\r\n\r\n    const setTimeOut = () => {\r\n        setTimeout(() => {\r\n            setIsErrro(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             <div>\r\n                <StudentHeader props={props} />\r\n            </div>\r\n            <div className=\"container mt-4 mb-5 w-50\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h5 className=\"text-center mb-3\">Personal data</h5>\r\n                        <form onSubmit={(e) => handleAddPersonalData(e)}>\r\n                            <div className=\"form-group\">\r\n                                <label>Firstname</label>\r\n                                <input type=\"text\" className=\"form-control\" value={stdFirstname} onChange={(e) => setStdFirstname(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Lastname</label>\r\n                                <input type=\"text\" className=\"form-control\" value={stdLastname} onChange={(e) => setStdLastname(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Age</label>\r\n                                <input type=\"number\" max=\"200\" className=\"form-control\" value={stdAge} onChange={(e) => setStdAge(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Gender</label>\r\n                                <select className=\"custom-select\"\r\n                                    value={stdGender}\r\n                                    onChange={(e) => setStdGender(e.target.value)}\r\n                                    >\r\n                                    {\r\n                                        genders.map(item => \r\n                                            <option key={item.id} value={item.label}>{item.label}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Birthday</label>\r\n                                <input type=\"date\" className=\"form-control\" value={stdBirthday} onChange={(e) => setStdBirthdary(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input type=\"text\" className=\"form-control\" value={stdAddress} onChange={(e) => setStdAddress(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Zipcode</label>\r\n                                <input type=\"number\" className=\"form-control\" value={stdZipcode} onChange={(e) => setStdZipcode(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                {addPersonal ? (\r\n                                    <button type=\"submit\" className=\"btn btn-light mr-1\" disabled><IoCheckmarkOutline className=\"ics-3\" /></button>\r\n                                ):(\r\n                                    <button type=\"submit\" className=\"btn btn-light mr-1\"><IoSaveOutline className=\"ics-3\" /></button>\r\n                                )}\r\n                                \r\n                                {/* <button type=\"button\" className=\"btn btn-light\" onClick={() => props.history.push(\"/student\")}><IoArrowBackOutline className=\"ics-3\" /></button> */}\r\n                            </div>\r\n                        </form>\r\n                        {isError && (\r\n                            <div className=\"alert alert-danger mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n\r\n                        {isSuccess && (\r\n                            <div className=\"alert alert-success mt-2 mr-3 ml-3\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <h5 className=\"text-center mb-3\">Education data</h5>\r\n                        <form onSubmit={(e) => handleAddEducationData(e)}>\r\n                            <div className=\"form-group\">\r\n                                <label>Faculty</label>\r\n                                <input type=\"text\" className=\"form-control\" value={stdFaculty} onChange={(e) => setStdFaculty(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Major</label>\r\n                                <input type=\"text\" className=\"form-control\" value={stdMajor} onChange={(e) => setStdMajor(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Level</label>\r\n                                <select className=\"custom-select\"\r\n                                    value={stdLevel}\r\n                                    onChange={(e) => setStdLevel(e.target.value)}\r\n                                    >\r\n                                    {\r\n                                        levels.map(item => \r\n                                            <option key={item.id} value={item.id}>{item.label}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Type</label>\r\n                                <select className=\"custom-select\"\r\n                                    value={stdType}\r\n                                    onChange={(e) => setStdType(e.target.value)}\r\n                                    >\r\n                                    {\r\n                                        types.map(item => \r\n                                            <option key={item.id} value={item.label}>{item.label}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                {addEducation ? (\r\n                                    <button type=\"submit\" className=\"btn btn-light mr-1\" disabled><IoCheckmarkOutline className=\"ics-3\" /></button>\r\n                                ):(\r\n                                    <button type=\"submit\" className=\"btn btn-light mr-1\"><IoSaveOutline className=\"ics-3\" /></button>\r\n                                )}\r\n                                \r\n                                {/* <button type=\"button\" className=\"btn btn-light\" onClick={() => props.history.push(\"/student\")}><IoArrowBackOutline className=\"ics-3\" /></button> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </Fragment>\r\n       \r\n    )\r\n}\r\n\r\nexport default AddStudentData\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\students\\registerStudent.js",["155","156","157"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport AppContext from \"../../context/appContext\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport { \r\n    IoSaveOutline,\r\n    IoCreateOutline,\r\n    IoArrowBackOutline\r\n } from \"react-icons/io5\";\r\n\r\nconst RegisterStudent = (props) => {\r\n    const { registerStudent, genId, checkDuplicateUsername, checkDuplicateEmail } = useContext(AppContext)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [isError, setIsError] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n\r\n    // const types = [\r\n    //     {id:\"0\", label:\"--Select--\"},\r\n    //     {id:\"1\", label:\"Normal\"},\r\n    //     {id:\"2\", label:\"Special\"}\r\n    // ];\r\n\r\n    // const levels = [\r\n    //     {id:\"0\", label:\"-- Select --\"},\r\n    //     {id:\"1\", label:\"1\"},\r\n    //     {id:\"2\", label:\"2\"},\r\n    //     {id:\"3\", label:\"3\"},\r\n    //     {id:\"4\", label:\"4\"},\r\n    // ];\r\n\r\n    // useEffect(() => {\r\n    //     // console.log(type.type)\r\n    // }, [type])\r\n\r\n    // useEffect(() => {\r\n    //     // console.log(type.type)\r\n    // }, [level])\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault()\r\n        let msg = \"\";\r\n        const dataUsername = {\r\n            \"type\":\"1\",\r\n            \"username\":username,\r\n        };\r\n        const dataEmail = {\r\n            \"type\":\"1\",\r\n            \"email\":email\r\n        };\r\n\r\n        const resCheckUsername = await checkDuplicateUsername(dataUsername)\r\n        // console.log(resCheckUsername)\r\n        const resCheckEmail = await checkDuplicateEmail(dataEmail)\r\n        // console.log(resCheckEmail)\r\n\r\n        let _username = \"\"\r\n        let _email = \"\"\r\n        if(resCheckUsername !== undefined) {\r\n            const { regist_username: username_} = resCheckUsername\r\n            _username = username_\r\n        }\r\n\r\n        if(resCheckEmail !== undefined) {\r\n            const { regist_email: email_} = resCheckEmail\r\n            _email = email_\r\n        }\r\n\r\n        if(password !== confirmPassword) {\r\n            msg = \"Password not match\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(password.length < 6){\r\n            msg = \"Password must more 6 character\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(phone.length !== 10) {\r\n            msg = \"Phone number is 10 digit\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(username === _username) {\r\n            msg = \"This username is duplicate\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else if(email === _email) {\r\n            msg = \"This email is duplicate\"\r\n            setMsg(msg)\r\n            setIsError(true)\r\n            setTimeoutError()\r\n\r\n        } else {\r\n            // console.log(\"Saved...\")\r\n            const id = genId()\r\n            const data = {\r\n                id,\r\n                username,\r\n                password,\r\n                email,\r\n                phone,\r\n                type:\"1\",\r\n                block: \"0\",\r\n                status: \"0\"\r\n            };\r\n            const res = await fetch(Webconfig.registerUser(), {\r\n                method: \"POST\",\r\n                headers : {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body : JSON.stringify(data)\r\n            });\r\n            // console.log(res)\r\n            const { status, statusText, ok, url } = res\r\n            if(ok) {\r\n                // clearInput()\r\n                const jsonData = await res.json()\r\n                registerStudent(data);\r\n                setMsg(jsonData.message)\r\n                setIsSuccess(true)\r\n                setTimeOutSuccess()\r\n                props.history.push(\"/\")\r\n\r\n            } else if(!ok) {\r\n                console.error(`${status} ${statusText} this ${url}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setTimeOutSuccess = () => {\r\n        setTimeout(() => {\r\n            setIsSuccess(false)\r\n        }, 5000);\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setUsername(\"\")\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n        setEmail(\"\")\r\n        setPhone(\"\")\r\n    }\r\n\r\n    const setTimeoutError = () => {\r\n        setIsError(true)\r\n        setTimeout(() => {\r\n            setIsError(false)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"w-25 mx-auto mt-3\">\r\n                <div className=\"mt-2 text-center\"><h3>Register | Student</h3></div>\r\n                <form className=\"mt-4 mb-5\"  onSubmit={(e) => handleRegister(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Confirm password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Email</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            min=\"6\"\r\n                            max=\"15\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Phone</label>\r\n                        <input \r\n                            type=\"number\" \r\n                            className=\"form-control\"\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-light mr-1\"><IoSaveOutline className=\"ics-3\" /></button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => props.history.push(\"/\")}><IoArrowBackOutline className=\"ics-3\" /></button>\r\n                    </div>\r\n                    {isError && (\r\n                        <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                    {isSuccess && (\r\n                        <div className=\"alert alert-success mt-4\" role=\"alert\">\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RegisterStudent\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\students\\studentProfile.js",["158","159","160","161","162","163"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport AppContext from \"../../context/appContext\";\r\nimport StudentHeader from \"../headers/student-header\";\r\nimport Webconfig from \"../../api/web-config\";\r\nimport ImgProfile from \"../../assets/images/img1.png\";\r\n\r\nconst StudentProfile = (props) => {\r\n    const { getUser } = useContext(AppContext)\r\n    const [loginData, setLoginData] = useState()\r\n    const [data, setData] = useState([])\r\n    const [image, setImage] = useState()\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(image)\r\n    // }, [image]);\r\n\r\n    const init = async () => {\r\n        const getStorage = getUser()\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        } else {\r\n            setImage(ImgProfile)\r\n\r\n            const { token, isLogin, userData } = getStorage\r\n            const { regist_id: std_id } = userData\r\n            setLoginData(userData)\r\n\r\n            const res = await fetch(Webconfig.getStudentByStudentId(std_id), {\r\n                method: \"GET\"\r\n            });\r\n            const { status, statusText, ok, url } = res\r\n            if(ok) {\r\n                const jsonData = await res.json()\r\n                if(jsonData.length > 0) {\r\n                    setData(jsonData[0])\r\n                } else {\r\n                    console.log(jsonData)\r\n                }\r\n    \r\n            } else if(!ok) {\r\n                console.error(`${status} ${statusText} this ${url}`)\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    const uploadImg = e => {\r\n        e.preventDefault()\r\n        console.log(\"Update image...\")\r\n    };\r\n\r\n    const onImageChange = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0];\r\n            setImage(URL.createObjectURL(img))\r\n        }\r\n      };\r\n\r\n    return (\r\n        <Fragment>\r\n            <StudentHeader props={props} />\r\n            <div className=\"w-10pc mx-auto mt-5 mb-5\">\r\n                {/* <img className=\"rounded-circle\" src={ImgProfile} alt=\"\" /> */}\r\n                <img className=\"rounded-circle\" src={image} alt=\"\" />\r\n            </div>\r\n            {/* <div className=\"w-10pc mx-auto\">\r\n                <form onSubmit={(e) => uploadImg(e)}>\r\n                    <div className=\"form-group text-center\">\r\n                        <input type=\"file\" className=\"form-control-file\" onChange={onImageChange} />\r\n                        <button type=\"submit\" className=\"btn btn-light my-2\">Upload</button>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-light\">Upload</button>\r\n                </form>\r\n                \r\n            </div> */}\r\n            <div className=\"container w-50 mt-4 mb-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item text-center bg-light\"><strong>Personal Data</strong></li>\r\n                            <li className=\"list-group-item\"><strong>Name</strong> {data.std_firstname} {data.std_lastname}</li>\r\n                            <li className=\"list-group-item\"><strong>Gender</strong> {data.std_gender}</li>\r\n                            <li className=\"list-group-item\"><strong>Age</strong> {data.std_age}</li>\r\n                            <li className=\"list-group-item\"><strong>Birthday</strong> {data.std_birthday}</li>\r\n                            <li className=\"list-group-item\"><strong>Address</strong> {data.user_address}</li>\r\n                            <li className=\"list-group-item\"><strong>Zipcode</strong> {data.zipcode}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item text-center bg-light\"><strong>Education Data</strong></li>\r\n                            <li className=\"list-group-item\"><strong>Faculty</strong> {data.std_faculty}</li>\r\n                            <li className=\"list-group-item\"><strong>Major</strong> {data.std_major}</li>\r\n                            <li className=\"list-group-item\"><strong>Level</strong> {data.std_level}</li>\r\n                            <li className=\"list-group-item\"><strong>Type</strong> {data.std_type}</li>\r\n                            <li className=\"list-group-item\"><strong>Advisor t.</strong> {data.t_name} {data.t_lastname}</li>\r\n                            <li className=\"list-group-item\">.</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default StudentProfile\r\n","D:\\workspace-react\\register-system\\client\\src\\context\\appContext.js",[],"D:\\workspace-react\\register-system\\client\\src\\context\\appReducer.js",[],"D:\\workspace-react\\register-system\\client\\src\\context\\appAction.js",[],"D:\\workspace-react\\register-system\\client\\src\\context\\initialState.js",["164"],"import React from \"react\";\r\n\r\nconst InitialState = {\r\n    authenLogin:[],\r\n    admins:[\r\n        { \r\n            id:1,\r\n            username:\"admin1\",\r\n            password:\"admin1\",\r\n            firstname:\"admin1\",\r\n            lastname:\"admin1\"\r\n        },\r\n        {\r\n            id:2,\r\n            username:\"admin2\",\r\n            password:\"admin2\",\r\n            firstname:\"admin2\",\r\n            lastname:\"admin2\"\r\n        }\r\n    ],\r\n    register:[\r\n        \r\n    ],\r\n    students:[\r\n        {\r\n            id:\"1\", \r\n            username:\"techin\", \r\n            password:\"999999\", \r\n            firstname:\"techin\", \r\n            lastname:\"nakata\", \r\n            birthday:\"1999-12-05\", \r\n            faculty:\"Science-technology\",\r\n            major:\"Computer-science\",\r\n            level:\"1\",\r\n            type:\"Normal\"\r\n        },\r\n        {\r\n            id:\"2\", \r\n            username:\"john\", \r\n            password:\"999999\", \r\n            firstname:\"John\", \r\n            lastname:\"Doe\", \r\n            birthday:\"1996-11-05\", \r\n            faculty:\"Science-technology\",\r\n            major:\"Computer-science\",\r\n            level:\"2\",\r\n            type:\"Normal\"\r\n        },\r\n        {\r\n            id:\"3\", \r\n            username:\"johny\", \r\n            password:\"999999\", \r\n            firstname:\"Johny\", \r\n            lastname:\"Dape\", \r\n            birthday:\"1991-01-05\", \r\n            faculty:\"Science-technology\",\r\n            major:\"Information technology\",\r\n            level:\"3\",\r\n            type:\"Normal\"\r\n        },\r\n    ],\r\n    teachers:[],\r\n\r\n    // Type for login\r\n    // types:[\r\n    //     {id:\"1\", label:\"Student\"},\r\n    //     {id:\"2\", label:\"Teacher\"}\r\n    //     // {id:\"3\", label:\"Admin\"}\r\n    // ],\r\n    // response:[\r\n    //     {   \r\n    //         id:1,\r\n    //         username:\"test1\",\r\n    //         password:\"1234\"\r\n    //     },\r\n    //     {   \r\n    //         id:2,\r\n    //         username:\"test2\",\r\n    //         password:\"1234\"\r\n    //     }\r\n    // ];\r\n    userData: []\r\n};\r\n\r\nexport default InitialState;","D:\\workspace-react\\register-system\\client\\src\\components\\alerts\\alert-warning.js",[],"D:\\workspace-react\\register-system\\client\\src\\components\\headers\\admin-header.js",["165","166"],"D:\\workspace-react\\register-system\\client\\src\\api\\web-config.js",["167"],"D:\\workspace-react\\register-system\\client\\src\\components\\headers\\student-header.js",["168","169","170","171"],"import React, { Fragment, useContext, useEffect } from 'react';\r\nimport AppContext from \"../../context/appContext\";\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { \r\n    IoLogOutOutline, \r\n    IoHomeOutline,\r\n    IoBookOutline,\r\n    IoPeopleOutline,\r\n    IoSettingsOutline,\r\n    IoPersonOutline,\r\n    IoMailOutline,\r\n    IoMailUnreadOutline,\r\n    IoPerson,\r\n    IoCreateOutline\r\n} from \"react-icons/io5\";\r\n\r\nconst StudentHeader = ({ props} ) => {\r\n    const { logout } = useContext(AppContext)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const init = async () => {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        // console.log(getStorage)\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logout()\r\n        props.history.push(\"/\")\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{ backgroundColor: \"#EAEDED\", padding: 5 }}>\r\n                <div className=\"container d-flex\">\r\n                    <div className=\"mr-auto bd-highlight\">\r\n                        <span className=\"m-1\"><IoPerson className=\"ics-5\" /></span> |\r\n                        <NavLink to=\"/student\" className=\"m-1 hover-grey mr-3\">\r\n                            <IoHomeOutline className=\"ics-5\" />\r\n                        </NavLink> \r\n                    </div>\r\n                    \r\n                    {/* <NavLink to=\"/admin-student\" className=\"m-1 hover-grey mr-3\"><IoPeopleOutline className=\"ics-5\" /></NavLink>*/}\r\n                    <NavLink to=\"/student-profile\" className=\"m-1 hover-grey mr-3\"><IoPersonOutline className=\"ics-5\" /></NavLink> \r\n                    <NavLink to=\"/student-addData\" className=\"m-1 hover-grey mr-3\"><IoCreateOutline className=\"ics-5\" /></NavLink>                    \r\n                    <NavLink to=\"#\" className=\"m-1 hover-grey mr-3\"><IoSettingsOutline className=\"ics-5\" /></NavLink>\r\n                    <NavLink to=\"#\" className=\"m-1 hover-grey mr-3\"><IoMailUnreadOutline className=\"ics-5\" /></NavLink>\r\n                    <div className=\"m-1 ml-4\" >\r\n                        <div \r\n                            className=\"hover-grey\" \r\n                            onClick={() => handleLogout()}\r\n                        >\r\n                            <IoLogOutOutline className=\"ics-5\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default StudentHeader\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\headers\\teacher-header.js",["172","173","174","175"],"import React, { Fragment, useContext, useEffect } from 'react';\r\nimport AppContext from \"../../context/appContext\";\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { \r\n    IoLogOutOutline, \r\n    IoHomeOutline,\r\n    IoBookOutline,\r\n    IoPeopleOutline,\r\n    IoSettingsOutline,\r\n    IoPersonOutline,\r\n    IoMailOutline,\r\n    IoMailUnreadOutline,\r\n    IoPerson,\r\n    IoCreateOutline\r\n} from \"react-icons/io5\";\r\n\r\nconst TeacherHeader = ({ props} ) => {\r\n    const { logout } = useContext(AppContext)\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const init = async () => {\r\n        const getStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n        // console.log(getStorage)\r\n        if(getStorage === null) {\r\n            props.history.push(\"/\") \r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logout()\r\n        props.history.push(\"/\")\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{ backgroundColor: \"#EAEDED\", padding: 5 }}>\r\n                <div className=\"container d-flex\">\r\n                    <div className=\"mr-auto bd-highlight\">\r\n                        <span className=\"m-1\"><IoPerson className=\"ics-5\" /></span> |\r\n                        <NavLink to=\"/teacher\" className=\"m-1 hover-grey mr-3\">\r\n                            <IoHomeOutline className=\"ics-5\" />\r\n                        </NavLink> \r\n                    </div>\r\n                    \r\n                    {/* <NavLink to=\"/admin-student\" className=\"m-1 hover-grey mr-3\"><IoPeopleOutline className=\"ics-5\" /></NavLink>*/}\r\n                    <NavLink to=\"#\" className=\"m-1 hover-grey mr-3\"><IoPersonOutline className=\"ics-5\" /></NavLink> \r\n                    <NavLink to=\"#\" className=\"m-1 hover-grey mr-3\"><IoCreateOutline className=\"ics-5\" /></NavLink>                    \r\n                    <NavLink to=\"#\" className=\"m-1 hover-grey mr-3\"><IoSettingsOutline className=\"ics-5\" /></NavLink>\r\n                    <NavLink to=\"#\" className=\"m-1 hover-grey mr-3\"><IoMailUnreadOutline className=\"ics-5\" /></NavLink>\r\n                    <div className=\"m-1 ml-4\" >\r\n                        <div \r\n                            className=\"hover-grey\" \r\n                            onClick={() => handleLogout()}\r\n                        >\r\n                            <IoLogOutOutline className=\"ics-5\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TeacherHeader\r\n","D:\\workspace-react\\register-system\\client\\src\\components\\admins\\admin-subject.js",["176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":3,"column":5,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"187","line":4,"column":5,"nodeType":"185","messageId":"186","endLine":4,"endColumn":20},{"ruleId":"183","severity":1,"message":"188","line":5,"column":5,"nodeType":"185","messageId":"186","endLine":5,"endColumn":20},{"ruleId":"183","severity":1,"message":"189","line":6,"column":5,"nodeType":"185","messageId":"186","endLine":6,"endColumn":18},{"ruleId":"183","severity":1,"message":"190","line":13,"column":13,"nodeType":"185","messageId":"186","endLine":13,"endColumn":24},{"ruleId":"183","severity":1,"message":"191","line":14,"column":12,"nodeType":"185","messageId":"186","endLine":14,"endColumn":18},{"ruleId":"183","severity":1,"message":"192","line":15,"column":12,"nodeType":"185","messageId":"186","endLine":15,"endColumn":19},{"ruleId":"183","severity":1,"message":"193","line":16,"column":12,"nodeType":"185","messageId":"186","endLine":16,"endColumn":20},{"ruleId":"183","severity":1,"message":"194","line":17,"column":12,"nodeType":"185","messageId":"186","endLine":17,"endColumn":20},{"ruleId":"183","severity":1,"message":"195","line":18,"column":12,"nodeType":"185","messageId":"186","endLine":18,"endColumn":20},{"ruleId":"183","severity":1,"message":"196","line":19,"column":12,"nodeType":"185","messageId":"186","endLine":19,"endColumn":20},{"ruleId":"183","severity":1,"message":"197","line":20,"column":12,"nodeType":"185","messageId":"186","endLine":20,"endColumn":20},{"ruleId":"183","severity":1,"message":"198","line":21,"column":12,"nodeType":"185","messageId":"186","endLine":21,"endColumn":19},{"ruleId":"183","severity":1,"message":"199","line":22,"column":12,"nodeType":"185","messageId":"186","endLine":22,"endColumn":20},{"ruleId":"183","severity":1,"message":"200","line":23,"column":12,"nodeType":"185","messageId":"186","endLine":23,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":27,"column":8,"nodeType":"203","endLine":27,"endColumn":10,"suggestions":"204"},{"ruleId":"183","severity":1,"message":"205","line":5,"column":5,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"183","severity":1,"message":"206","line":12,"column":8,"nodeType":"185","messageId":"186","endLine":12,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":28,"column":8,"nodeType":"203","endLine":28,"endColumn":10,"suggestions":"207"},{"ruleId":"183","severity":1,"message":"208","line":36,"column":21,"nodeType":"185","messageId":"186","endLine":36,"endColumn":26},{"ruleId":"183","severity":1,"message":"209","line":36,"column":28,"nodeType":"185","messageId":"186","endLine":36,"endColumn":35},{"ruleId":"183","severity":1,"message":"205","line":5,"column":5,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":26,"column":8,"nodeType":"203","endLine":26,"endColumn":10,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"208","line":37,"column":21,"nodeType":"185","messageId":"186","endLine":37,"endColumn":26},{"ruleId":"183","severity":1,"message":"209","line":37,"column":28,"nodeType":"185","messageId":"186","endLine":37,"endColumn":35},{"ruleId":"183","severity":1,"message":"211","line":116,"column":11,"nodeType":"185","messageId":"186","endLine":116,"endColumn":23},{"ruleId":"183","severity":1,"message":"212","line":1,"column":37,"nodeType":"185","messageId":"186","endLine":1,"endColumn":46},{"ruleId":"183","severity":1,"message":"213","line":6,"column":5,"nodeType":"185","messageId":"186","endLine":6,"endColumn":20},{"ruleId":"183","severity":1,"message":"214","line":123,"column":11,"nodeType":"185","messageId":"186","endLine":123,"endColumn":21},{"ruleId":"183","severity":1,"message":"215","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":20},{"ruleId":"183","severity":1,"message":"216","line":2,"column":22,"nodeType":"185","messageId":"186","endLine":2,"endColumn":43},{"ruleId":"183","severity":1,"message":"217","line":7,"column":5,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"218","line":8,"column":5,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},{"ruleId":"183","severity":1,"message":"219","line":10,"column":5,"nodeType":"185","messageId":"186","endLine":10,"endColumn":19},{"ruleId":"183","severity":1,"message":"220","line":11,"column":5,"nodeType":"185","messageId":"186","endLine":11,"endColumn":19},{"ruleId":"183","severity":1,"message":"221","line":14,"column":5,"nodeType":"185","messageId":"186","endLine":14,"endColumn":19},{"ruleId":"183","severity":1,"message":"222","line":15,"column":5,"nodeType":"185","messageId":"186","endLine":15,"endColumn":19},{"ruleId":"183","severity":1,"message":"223","line":63,"column":17,"nodeType":"185","messageId":"186","endLine":63,"endColumn":21},{"ruleId":"183","severity":1,"message":"190","line":14,"column":13,"nodeType":"185","messageId":"186","endLine":14,"endColumn":24},{"ruleId":"183","severity":1,"message":"194","line":16,"column":12,"nodeType":"185","messageId":"186","endLine":16,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":20,"column":8,"nodeType":"203","endLine":20,"endColumn":10,"suggestions":"224"},{"ruleId":"183","severity":1,"message":"225","line":25,"column":17,"nodeType":"185","messageId":"186","endLine":25,"endColumn":25},{"ruleId":"183","severity":1,"message":"226","line":3,"column":5,"nodeType":"185","messageId":"186","endLine":3,"endColumn":20},{"ruleId":"183","severity":1,"message":"205","line":5,"column":5,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"183","severity":1,"message":"227","line":6,"column":5,"nodeType":"185","messageId":"186","endLine":6,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":35,"column":8,"nodeType":"203","endLine":35,"endColumn":10,"suggestions":"228"},{"ruleId":"183","severity":1,"message":"208","line":43,"column":21,"nodeType":"185","messageId":"186","endLine":43,"endColumn":26},{"ruleId":"183","severity":1,"message":"209","line":43,"column":28,"nodeType":"185","messageId":"186","endLine":43,"endColumn":35},{"ruleId":"183","severity":1,"message":"229","line":73,"column":17,"nodeType":"185","messageId":"186","endLine":73,"endColumn":19},{"ruleId":"183","severity":1,"message":"229","line":105,"column":17,"nodeType":"185","messageId":"186","endLine":105,"endColumn":19},{"ruleId":"183","severity":1,"message":"230","line":133,"column":11,"nodeType":"185","messageId":"186","endLine":133,"endColumn":21},{"ruleId":"183","severity":1,"message":"212","line":1,"column":37,"nodeType":"185","messageId":"186","endLine":1,"endColumn":46},{"ruleId":"183","severity":1,"message":"213","line":6,"column":5,"nodeType":"185","messageId":"186","endLine":6,"endColumn":20},{"ruleId":"183","severity":1,"message":"214","line":145,"column":11,"nodeType":"185","messageId":"186","endLine":145,"endColumn":21},{"ruleId":"183","severity":1,"message":"231","line":9,"column":12,"nodeType":"185","messageId":"186","endLine":9,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":15,"column":8,"nodeType":"203","endLine":15,"endColumn":10,"suggestions":"232"},{"ruleId":"183","severity":1,"message":"208","line":28,"column":21,"nodeType":"185","messageId":"186","endLine":28,"endColumn":26},{"ruleId":"183","severity":1,"message":"209","line":28,"column":28,"nodeType":"185","messageId":"186","endLine":28,"endColumn":35},{"ruleId":"183","severity":1,"message":"233","line":51,"column":11,"nodeType":"185","messageId":"186","endLine":51,"endColumn":20},{"ruleId":"183","severity":1,"message":"234","line":56,"column":11,"nodeType":"185","messageId":"186","endLine":56,"endColumn":24},{"ruleId":"183","severity":1,"message":"235","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"189","line":13,"column":5,"nodeType":"185","messageId":"186","endLine":13,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":23,"column":8,"nodeType":"203","endLine":23,"endColumn":10,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":102,"column":5,"nodeType":"239","messageId":"240","endLine":102,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":9,"column":5,"nodeType":"185","messageId":"186","endLine":9,"endColumn":18},{"ruleId":"183","severity":1,"message":"187","line":10,"column":5,"nodeType":"185","messageId":"186","endLine":10,"endColumn":20},{"ruleId":"183","severity":1,"message":"189","line":13,"column":5,"nodeType":"185","messageId":"186","endLine":13,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":24,"column":8,"nodeType":"203","endLine":24,"endColumn":10,"suggestions":"241"},{"ruleId":"183","severity":1,"message":"184","line":9,"column":5,"nodeType":"185","messageId":"186","endLine":9,"endColumn":18},{"ruleId":"183","severity":1,"message":"187","line":10,"column":5,"nodeType":"185","messageId":"186","endLine":10,"endColumn":20},{"ruleId":"183","severity":1,"message":"189","line":13,"column":5,"nodeType":"185","messageId":"186","endLine":13,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":24,"column":8,"nodeType":"203","endLine":24,"endColumn":10,"suggestions":"242"},{"ruleId":"201","severity":1,"message":"202","line":27,"column":8,"nodeType":"203","endLine":27,"endColumn":10,"suggestions":"243"},{"ruleId":"183","severity":1,"message":"244","line":86,"column":11,"nodeType":"185","messageId":"186","endLine":86,"endColumn":30},{"ruleId":"183","severity":1,"message":"245","line":90,"column":11,"nodeType":"185","messageId":"186","endLine":90,"endColumn":30},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'IoBookOutline' is defined but never used.","Identifier","unusedVar","'IoPeopleOutline' is defined but never used.","'IoPersonOutline' is defined but never used.","'IoMailOutline' is defined but never used.","'authenLogin' is assigned a value but never used.","'admins' is assigned a value but never used.","'countAm' is assigned a value but never used.","'students' is assigned a value but never used.","'countStd' is assigned a value but never used.","'teachers' is assigned a value but never used.","'countTch' is assigned a value but never used.","'subjects' is assigned a value but never used.","'countSj' is assigned a value but never used.","'messages' is assigned a value but never used.","'countMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["248"],"'IoCloseOutline' is defined but never used.","'AlertWarning' is defined but never used.",["249"],"'token' is assigned a value but never used.","'isLogin' is assigned a value but never used.",["250"],"'handleLogout' is assigned a value but never used.","'useEffect' is defined but never used.","'IoCreateOutline' is defined but never used.","'clearInput' is assigned a value but never used.","'IoAirplane' is defined but never used.","'IoPersonCircleOutline' is defined but never used.","'ADD_STUDENT' is defined but never used.","'ADD_TEACHER' is defined but never used.","'DELETE_STUDENT' is defined but never used.","'DELETE_TEACHER' is defined but never used.","'UPDATE_STUDENT' is defined but never used.","'UPDATE_TEACHER' is defined but never used.","'type' is assigned a value but never used.",["251"],"'userData' is assigned a value but never used.","'IoPencilOutline' is defined but never used.","'IoArrowBackOutline' is defined but never used.",["252"],"'id' is assigned a value but never used.","'setTimeOut' is assigned a value but never used.","'loginData' is assigned a value but never used.",["253"],"'uploadImg' is assigned a value but never used.","'onImageChange' is assigned a value but never used.","'React' is defined but never used.",["254"],"no-dupe-keys","Duplicate key 'getAllSubjects'.","ObjectExpression","unexpected",["255"],["256"],["257"],"'handleUpdateSubject' is assigned a value but never used.","'handleDeleteSubject' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},{"desc":"258","fix":"261"},{"desc":"258","fix":"262"},{"desc":"258","fix":"263"},{"desc":"258","fix":"264"},{"desc":"258","fix":"265"},{"desc":"258","fix":"266"},{"desc":"258","fix":"267"},{"desc":"258","fix":"268"},"Update the dependencies array to be: [init]",{"range":"269","text":"270"},{"range":"271","text":"270"},{"range":"272","text":"270"},{"range":"273","text":"270"},{"range":"274","text":"270"},{"range":"275","text":"270"},{"range":"276","text":"270"},{"range":"277","text":"270"},{"range":"278","text":"270"},{"range":"279","text":"270"},[963,965],"[init]",[1185,1187],[960,962],[617,619],[1525,1527],[555,557],[539,541],[556,558],[556,558],[993,995]]